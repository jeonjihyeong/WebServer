{"version":3,"file":"size.mjs","names":["convertToUnit","destructComputed","getCurrentInstanceName","includes","propsFactory","predefinedSizes","makeSizeProps","size","type","String","Number","default","useSize","props","name","sizeClasses","sizeStyles","width","height"],"sources":["../../src/composables/size.ts"],"sourcesContent":["// Utilities\nimport { convertToUnit, destructComputed, getCurrentInstanceName, includes, propsFactory } from '@/util'\n\n// Types\nconst predefinedSizes = ['x-small', 'small', 'default', 'large', 'x-large']\n\nexport interface SizeProps {\n  size?: string | number\n}\n\n// Composables\nexport const makeSizeProps = propsFactory({\n  size: {\n    type: [String, Number],\n    default: 'default',\n  },\n}, 'size')\n\nexport function useSize (\n  props: SizeProps,\n  name = getCurrentInstanceName(),\n) {\n  return destructComputed(() => {\n    let sizeClasses\n    let sizeStyles\n    if (includes(predefinedSizes, props.size)) {\n      sizeClasses = `${name}--size-${props.size}`\n    } else if (props.size) {\n      sizeStyles = {\n        width: convertToUnit(props.size),\n        height: convertToUnit(props.size),\n      }\n    }\n    return { sizeClasses, sizeStyles }\n  })\n}\n"],"mappings":"AAAA;SACSA,a,EAAeC,gB,EAAkBC,sB,EAAwBC,Q,EAAUC,Y,6BAE5E;;AACA,MAAMC,eAAe,GAAG,CAAC,SAAD,EAAY,OAAZ,EAAqB,SAArB,EAAgC,OAAhC,EAAyC,SAAzC,CAAxB;AAMA;AACA,OAAO,MAAMC,aAAa,GAAGF,YAAY,CAAC;EACxCG,IAAI,EAAE;IACJC,IAAI,EAAE,CAACC,MAAD,EAASC,MAAT,CADF;IAEJC,OAAO,EAAE;EAFL;AADkC,CAAD,EAKtC,MALsC,CAAlC;AAOP,OAAO,SAASC,OAAT,CACLC,KADK,EAGL;EAAA,IADAC,IACA,uEADOZ,sBAAsB,EAC7B;EACA,OAAOD,gBAAgB,CAAC,MAAM;IAC5B,IAAIc,WAAJ;IACA,IAAIC,UAAJ;;IACA,IAAIb,QAAQ,CAACE,eAAD,EAAkBQ,KAAK,CAACN,IAAxB,CAAZ,EAA2C;MACzCQ,WAAW,GAAI,GAAED,IAAK,UAASD,KAAK,CAACN,IAAK,EAA1C;IACD,CAFD,MAEO,IAAIM,KAAK,CAACN,IAAV,EAAgB;MACrBS,UAAU,GAAG;QACXC,KAAK,EAAEjB,aAAa,CAACa,KAAK,CAACN,IAAP,CADT;QAEXW,MAAM,EAAElB,aAAa,CAACa,KAAK,CAACN,IAAP;MAFV,CAAb;IAID;;IACD,OAAO;MAAEQ,WAAF;MAAeC;IAAf,CAAP;EACD,CAZsB,CAAvB;AAaD"}