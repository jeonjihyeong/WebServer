{"version":3,"file":"VItem.mjs","names":["makeGroupItemProps","useGroupItem","VItemGroupSymbol","genericComponent","VItem","name","props","emits","val","setup","slots","isSelected","select","toggle","selectedClass","value","disabled","default"],"sources":["../../../src/components/VItemGroup/VItem.tsx"],"sourcesContent":["// Composables\nimport { makeGroupItemProps, useGroupItem } from '@/composables/group'\nimport { VItemGroupSymbol } from './VItemGroup'\n\n// Utilities\nimport { genericComponent } from '@/util'\n\n// Types\nimport type { MakeSlots } from '@/util'\nimport type { GroupItemProvide } from '@/composables/group'\n\nexport const VItem = genericComponent<new () => {\n  $slots: MakeSlots<{\n    default: [GroupItemProvide]\n  }>\n}>()({\n  name: 'VItem',\n\n  props: makeGroupItemProps(),\n\n  emits: {\n    'group:selected': (val: { value: boolean }) => true,\n  },\n\n  setup (props, { slots }) {\n    const { isSelected, select, toggle, selectedClass, value, disabled } = useGroupItem(props, VItemGroupSymbol)\n    return () => slots.default?.({\n      isSelected: isSelected.value,\n      selectedClass: selectedClass.value,\n      select,\n      toggle,\n      value: value.value,\n      disabled: disabled.value,\n    })\n  },\n})\n\nexport type VItem = InstanceType<typeof VItem>\n"],"mappings":"AAAA;SACSA,kB,EAAoBC,Y;SACpBC,gB,4BAET;;SACSC,gB,gCAET;;AAIA,OAAO,MAAMC,KAAK,GAAGD,gBAAgB,GAIhC;EACHE,IAAI,EAAE,OADH;EAGHC,KAAK,EAAEN,kBAAkB,EAHtB;EAKHO,KAAK,EAAE;IACL,kBAAmBC,GAAD,IAA6B;EAD1C,CALJ;;EASHC,KAAK,CAAEH,KAAF,QAAoB;IAAA,IAAX;MAAEI;IAAF,CAAW;IACvB,MAAM;MAAEC,UAAF;MAAcC,MAAd;MAAsBC,MAAtB;MAA8BC,aAA9B;MAA6CC,KAA7C;MAAoDC;IAApD,IAAiEf,YAAY,CAACK,KAAD,EAAQJ,gBAAR,CAAnF;IACA,OAAO;MAAA;;MAAA,yBAAMQ,KAAK,CAACO,OAAZ,qBAAM,oBAAAP,KAAK,EAAW;QAC3BC,UAAU,EAAEA,UAAU,CAACI,KADI;QAE3BD,aAAa,EAAEA,aAAa,CAACC,KAFF;QAG3BH,MAH2B;QAI3BC,MAJ2B;QAK3BE,KAAK,EAAEA,KAAK,CAACA,KALc;QAM3BC,QAAQ,EAAEA,QAAQ,CAACD;MANQ,CAAX,CAAX;IAAA,CAAP;EAQD;;AAnBE,CAJgC,CAA9B"}