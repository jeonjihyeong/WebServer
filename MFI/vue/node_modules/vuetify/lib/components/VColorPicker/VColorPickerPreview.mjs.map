{"version":3,"file":"VColorPickerPreview.mjs","names":["VSlider","defineComponent","HSVAtoCSS","useRender","nullColor","VColorPickerPreview","name","props","color","type","Object","disabled","Boolean","hideAlpha","emits","setup","emit","background","h","a"],"sources":["../../../src/components/VColorPicker/VColorPickerPreview.tsx"],"sourcesContent":["// Styles\nimport './VColorPickerPreview.sass'\n\n// Components\nimport { VSlider } from '@/components/VSlider'\n\n// Utilities\nimport { defineComponent, HSVAtoCSS, useRender } from '@/util'\nimport { nullColor } from './util'\n\n// Types\nimport type { PropType } from 'vue'\nimport type { HSVA } from '@/util'\n\nexport const VColorPickerPreview = defineComponent({\n  name: 'VColorPickerPreview',\n\n  props: {\n    color: {\n      type: Object as PropType<HSVA | null>,\n    },\n    disabled: Boolean,\n    hideAlpha: Boolean,\n  },\n\n  emits: {\n    'update:color': (color: HSVA) => true,\n  },\n\n  setup (props, { emit }) {\n    useRender(() => (\n      <div\n        class={[\n          'v-color-picker-preview',\n          {\n            'v-color-picker-preview--hide-alpha': props.hideAlpha,\n          },\n        ]}\n      >\n        <div class=\"v-color-picker-preview__dot\">\n          <div style={{ background: HSVAtoCSS(props.color ?? nullColor) }} />\n        </div>\n\n        <div class=\"v-color-picker-preview__sliders\">\n          <VSlider\n            class=\"v-color-picker-preview__track v-color-picker-preview__hue\"\n            modelValue={ props.color?.h }\n            onUpdate:modelValue={ h => emit('update:color', { ...(props.color ?? nullColor), h }) }\n            step={ 0 }\n            min={ 0 }\n            max={ 360 }\n            disabled={ props.disabled }\n            thumbSize={ 14 }\n            trackSize={ 8 }\n            trackFillColor=\"white\"\n            hideDetails\n          />\n\n          { !props.hideAlpha && (\n            <VSlider\n              class=\"v-color-picker-preview__track v-color-picker-preview__alpha\"\n              modelValue={ props.color?.a }\n              onUpdate:modelValue={ a => emit('update:color', { ...(props.color ?? nullColor), a }) }\n              step={ 0 }\n              min={ 0 }\n              max={ 1 }\n              disabled={ props.disabled }\n              thumbSize={ 14 }\n              trackSize={ 8 }\n              trackFillColor=\"white\"\n              hideDetails\n            />\n          ) }\n        </div>\n      </div>\n    ))\n\n    return {}\n  },\n})\n"],"mappings":";AAAA;AACA,mC,CAEA;;SACSA,O,gCAET;;SACSC,e,EAAiBC,S,EAAWC,S;SAC5BC,S,4BAET;;AAIA,OAAO,MAAMC,mBAAmB,GAAGJ,eAAe,CAAC;EACjDK,IAAI,EAAE,qBAD2C;EAGjDC,KAAK,EAAE;IACLC,KAAK,EAAE;MACLC,IAAI,EAAEC;IADD,CADF;IAILC,QAAQ,EAAEC,OAJL;IAKLC,SAAS,EAAED;EALN,CAH0C;EAWjDE,KAAK,EAAE;IACL,gBAAiBN,KAAD,IAAiB;EAD5B,CAX0C;;EAejDO,KAAK,CAAER,KAAF,QAAmB;IAAA,IAAV;MAAES;IAAF,CAAU;IACtBb,SAAS,CAAC;MAAA;;MAAA;QAAA,SAEC,CACL,wBADK,EAEL;UACE,sCAAsCI,KAAK,CAACM;QAD9C,CAFK;MAFD;QAAA,SASK;MATL;QAAA,SAUQ;UAAEI,UAAU,EAAEf,SAAS,iBAACK,KAAK,CAACC,KAAP,2BAAgBJ,SAAhB;QAAvB;MAVR;QAAA,SAaK;MAbL;QAAA,SAeI,2DAfJ;QAAA,+BAgBWG,KAAK,CAACC,KAhBjB,qBAgBW,cAAaU,CAhBxB;QAAA,uBAiBoBA,CAAC;UAAA;;UAAA,OAAIF,IAAI,CAAC,cAAD,EAAiB,EAAE,qBAAIT,KAAK,CAACC,KAAV,4BAAmBJ,SAAnB,CAAF;YAAiCc;UAAjC,CAAjB,CAAR;QAAA,CAjBrB;QAAA,QAkBK,CAlBL;QAAA,OAmBI,CAnBJ;QAAA,OAoBI,GApBJ;QAAA,YAqBSX,KAAK,CAACI,QArBf;QAAA,aAsBU,EAtBV;QAAA,aAuBU,CAvBV;QAAA,kBAwBa,OAxBb;QAAA;MAAA,UA4BF,CAACJ,KAAK,CAACM,SAAP;QAAA,SAEQ,6DAFR;QAAA,+BAGeN,KAAK,CAACC,KAHrB,qBAGe,cAAaW,CAH5B;QAAA,uBAIwBA,CAAC;UAAA;;UAAA,OAAIH,IAAI,CAAC,cAAD,EAAiB,EAAE,qBAAIT,KAAK,CAACC,KAAV,4BAAmBJ,SAAnB,CAAF;YAAiCe;UAAjC,CAAjB,CAAR;QAAA,CAJzB;QAAA,QAKS,CALT;QAAA,OAMQ,CANR;QAAA,OAOQ,CAPR;QAAA,YAQaZ,KAAK,CAACI,QARnB;QAAA,aASc,EATd;QAAA,aAUc,CAVd;QAAA,kBAWiB,OAXjB;QAAA;MAAA,QA5BE;IAAA,CAAD,CAAT;IA+CA,OAAO,EAAP;EACD;;AAhEgD,CAAD,CAA3C"}